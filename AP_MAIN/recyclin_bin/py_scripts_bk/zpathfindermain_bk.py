#!/usr/bin/python

from rdkit import Chem
from rdkit.Chem import AllChem


import os, os.path
# import winsound
from sys import platform
if os.name == 'nt' or platform == 'win32':
    os.chdir(os.path.dirname(__file__))
    
from zpathfinder import * 

# ____________________________________________________________________________________ #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
    # T0 - Initial simulated annealing temperature
    # XI - Reducing coef of SA temperature
    # P0 - num_screening ([0]SimIndex. [1]New_Method. [2]full.)
    # fp_type - fingerprint type for SimIndex or depth for MNA
    # h2g_ip hash2graph_initialize_position
# ____________________________________________________________________________________ #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #



def main():
    # ____________________________________________________________________________________ #
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
    # "top" , "MACCS" , "atom_pairs" , "vec_pairs" , "torsions" , "ECFP" , "FCFP"

    # 'AKT to PRO' 7-step trnsformation
    


    main_run("AP",'AKT to PRO 3 ',['O=C(O)C(=O)CCC(=O)O'],['C1CC(NC1)C(=O)O'],\
        None,8,0.2,10,[-9,-9,-9],\
        "atom_pairs",[1,1,1,1],[2,0.5,0.5],20)
    # 'OXA to LYS' 6-step transformation
    '''
    main_run("AP",'OXA to LYS 3 ',['O=C(O)C(=O)CC(=O)O'],['C(CCN)CC(C(=O)O)N'],\
        None,6,0.2,10,[-10,-10,-10],\
        "MACCS",[1,1,1,1],[2,0.5,0.5],10)
        '''



    # 'PYR to VAL' : 6-step transformation
    '''
    main_run("AP",'PYR to VAL 3 ',['O=C(C(=O)O)C'],['CC(C)C(C(=O)O)N'],\
        None,7,0.2,10,[-8,-8,-8],\
        "FCFP",[1,1,1,1],[2,0.5,0.5],1)
        '''

    # 'PYR to ISL' : 7-step transformation
    '''
    main_run("AP",'PYR to ILE 3 ',['O=C(C(=O)O)C'],['CCC(C)C(C(=O)O)N'],\
        None,8,0.2,10,[0,0,0],\
        "MACCS",[1,1,1,1],[2,0.5,0.5],1)
    '''

    # 'PYR to LEU' : 8-step transformation
    '''
    main_run("AP",'PYR to LEU 3 ',['O=C(C(=O)O)C'],['CC(C)CC(C(=O)O)N'],\
        None,8,0.2,10,[0,0,0],\
        "MACCS",[1,1,1,1],[2,0.5,0.5],1)
    '''

    # ____________________________________________________________________________________ #
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

    return

def main_run(rxn_db,pathway_name,substrates,products,pruning_method,max_levels,XI,T0,P0,fp_type,max_value,bin_adj,count_trial):
    for one_trial in range(count_trial):
        main_AP(rxn_db,pathway_name,substrates,products,pruning_method,max_levels,XI,T0,P0,fp_type,max_value,bin_adj)


def main_AP(rxn_db,pathway_name,substrates,products,pruning_method,max_levels,XI,T0,P0,fp_type,max_value,bin_adj):

    # ==================================================================================== #
    # ==================================================================================== #
    # Call PathFinder() Class in zpathfinder.py
    # rxn_diameter and rxn_score_lb are variables for Reaction Rules generated by RetroPath
    PFfunc = PathFinder(pruning_method=None, ignore_chirality=True, outstream=sys.stderr, rxn_diameter=2, rxn_score_lb=0,rxn_db=rxn_db)
    print "-"*10 + "  Computing pathway %s  " % pathway_name + "-"*10
    # ==================================================================================== #
    # ==================================================================================== #
    util._mkdir("../results")
    pathway_name=pathway_name+'0000'
    while os.path.isdir("../results/" +pathway_name)==True:
        pathway_name_list=pathway_name.split("0",1)
        pathway_name=pathway_name_list[0]+'0'+str(int('1'+pathway_name_list[1])+1)[-3:]
    util._mkdir("../results/" + pathway_name)
    html_writer = HtmlWriter("../results/" + pathway_name + "/" + pathway_name + ".html")
    html_writer.write("<h1><center>%s</center></h1>\n" % pathway_name)
    html_writer.write("<ul>\n")
    (original_subs_string, original_prod_string) = (substrates[0], products[0])
    pathway_prefix = "pathway%d%d" % (0,0)
    util._mkdir("../results/" + pathway_name + "/" +  pathway_prefix)
    util._mkdir("../results/" + pathway_name + "/" +  pathway_prefix + "/pathways")

    # ==================================================================================== #
    # ==================================================================================== #
    # ! ! ! ! ! ! ! ! !: Go to zpathfinder.py and search! #
    PFfunc.solve_pathway(original_subs_string, original_prod_string, html_writer, pathway_name, pathway_prefix, max_levels, rxn_db, XI, T0, P0, fp_type,max_value,bin_adj)
    print 'done solving pathway'
    # ==================================================================================== #
    # ==================================================================================== #
    html_writer.flush()#    
    html_writer.write("</ul>\n")#
    #html_writer.display()#
    return




if __name__ == '__main__':
    main()
    #main_zx()







# ============================================================================================================================== #
# ============================================================================================================================== #

# ==================================================================================== #
# ==================================================================================== #

# ==================================================================================== #
    # oxaloacetate (oxaloacetic acid)     'O=C(O)C(=O)CC(=O)O'
    # glutamate (glutamic acid)           'C(CC(=O)O)C(C(=O)O)N'
    # aspartate (aspartic acid)           'O=C(O)CC(N)C(=O)O'
# ==================================================================================== #
    # PEP             O=C(O)C(OP(=O)(O)O)=C
    # E4P             C(C(C(C=O)O)O)OP(=O)(O)O
    # phenylalanine   C1=CC=C(C=C1)CC(C(=O)O)N
    # Tyrosine        C1=CC(=CC=C1CC(C(=O)O)N)O
    # Tryptophan      C1=CC=C2C(=C1)C(=CN2)CC(C(=O)O)N
# ==================================================================================== #
    # G6P       C(C1C(C(C(C(O1)O)O)O)O)OP(=O)(O)O
    # histidine C1=C(NC=N1)CC(C(=O)O)N
    # serine    C(C(C(=O)O)N)O
    # cysteine  C(C(C(=O)O)N)S
    # glycine   C(C(=O)O)N
# ==================================================================================== #
    # pyruvate    O=C(C(=O)O)C
    # alanine     CC(C(=O)O)N
    # valine      CC(C)C(C(=O)O)N
    # isoleucine  CCC(C)C(C(=O)O)N
    # leucine     CC(C)CC(C(=O)O)N
# ==================================================================================== #
    # alpha-ketoglutarate   O=C(O)C(=O)CCC(=O)O
    # glutamate             C(CC(=O)O)C(C(=O)O)N
    # glutamine             C(CC(=O)N)C(C(=O)O)N
    # proline               C1CC(NC1)C(=O)O
    # arginine              C(CC(C(=O)O)N)CN=C(N)N
# ==================================================================================== #
    # oxaloacetate   O=C(O)C(=O)CC(=O)O
    # aspartate      O=C(O)CC(N)C(=O)O
    # asparagine     O=C(N)C[C@H](N)C(=O)O
    # methionine     CSCCC(C(=O)O)N
    # threonine      CC(C(C(=O)O)N)O
    # lysine         C(CCN)CC(C(=O)O)N
# ==================================================================================== #
# ==================================================================================== #

    # 'G6P to HIS'
    '''
    rxn_db=True
    pathway_name='G6P to HIS'
    substrates=['C(C1C(C(C(C(O1)O)O)O)O)OP(=O)(O)O']
    products=['C1=C(NC=N1)CC(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''

    # 'G6P to SER'
    '''
    rxn_db=True
    pathway_name='G6P to SER'
    substrates=['C(C1C(C(C(C(O1)O)O)O)O)OP(=O)(O)O']
    products=['C(C(C(=O)O)N)O']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''

    # 'G6P to CYS'
    '''
    rxn_db=True
    pathway_name='G6P to CYS'
    substrates=['C(C1C(C(C(C(O1)O)O)O)O)OP(=O)(O)O']
    products=['C(C(C(=O)O)N)S']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''

    # 'G6P to GLY'
    '''
    rxn_db=True
    pathway_name='G6P to GLY'
    substrates=['C(C1C(C(C(C(O1)O)O)O)O)OP(=O)(O)O']
    products=['C(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''
# ==================================================================================== #

    # 'PYR to ALA' : four?-step transformation
    '''
    rxn_db=True
    pathway_name='PYR to ALA0'
    substrates=['O=C(C(=O)O)C']
    products=['CC(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''

    # 'PYR to VAL' : six-step transformation
    '''
    main_zx(True,'PYR to VAL',['O=C(C(=O)O)C'],['CC(C)C(C(=O)O)N'],\
        None,7,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2])
    '''

    # 'PYR to ISL' : seven-step transformation
    '''
    main_zx(True,'PYR to ILE',['O=C(C(=O)O)C'],['CCC(C)C(C(=O)O)N'],\
        None,8,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2])
    '''

    # 'PYR to LEU' : eight-step transformation
    '''
    main_zx(True,'PYR to LEU',['O=C(C(=O)O)C'],['CC(C)CC(C(=O)O)N'],\
        None,8,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2])
    '''

    # 'PYR to SER' : one-step transformation
    '''
    main_zx(True,'PYR to SER',['O=C(C(=O)O)C'],['C(C(C(=O)O)N)O'],\
        None,6,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2],1)
    '''
# ==================================================================================== #

    # 'AKT to GLU'
    '''
    rxn_db=True
    pathway_name='AKT to GLU0'
    substrates=['O=C(O)C(=O)CCC(=O)O']
    products=['C(CC(=O)O)C(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''

    # 'AKT to GLN'
    '''
    rxn_db=True
    pathway_name='AKT to GLN'
    substrates=['O=C(O)C(=O)CCC(=O)O']
    products=['C(CC(=O)N)C(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.5,1,[0,0,0],"FP3"]
    '''

    # 'AKT to PRO' 7-step trnsformation
    '''
    main_run(True,'AKT to PRO',['O=C(O)C(=O)CCC(=O)O'],['C1CC(NC1)C(=O)O'],\
        None,8,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2],1)
    '''

    # 'AKT to ARG' 7-step trnsformation
    '''
    main_run(True,'AKT to ARG',['O=C(O)C(=O)CCC(=O)O'],['C(CC(C(=O)O)N)CN=C(N)N'],\
        None,8,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2],1)
    '''

    # 'AKT to ASN' 4-step transformation
    '''
    main_run(True,'AKT to ARG',['O=C(O)C(=O)CCC(=O)O'],['C(CC(C(=O)O)N)CN=C(N)N'],\
        None,8,0.8,100,[0,0,0],\
        "MACCS",[1,1,1,1],[0.5,0.5,2],1)
    '''

    # 'AKT to ASP'
    '''
    rxn_db=True
    pathway_name='AKT to ASP0'
    substrates=['O=C(O)C(=O)CCC(=O)O']
    products=['O=C(O)CC(N)C(=O)O']
    pruning_method=None
    max_levels=7
    [XI,T0,P0,fp_type]=[0.2,1000,[0,0,0],"FP3"]
    '''

    # 'AKT to THR'
    '''
    rxn_db=True
    pathway_name='AKT to THR0'
    substrates=['O=C(O)C(=O)CCC(=O)O']
    products=['CC(C(C(=O)O)N)O']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.2,1000,[0,0,0],"FP3"]
    '''
# ==================================================================================== #

    # 'OXA to LYS' 
    '''
    main_zx(True,'OXA to LYS',['O=C(O)C(=O)CC(=O)O'],['C(CCN)CC(C(=O)O)N'],\
        None,4,0.8,100,[2,2,2],\
        "MACCS",[1,1,1,1],[0.5,0.5,2])
    '''
# ==================================================================================== #

    # Terephthalic acid

# ==================================================================================== #

    # 'PEP_E4P to Phe'
    '''
    rxn_db=True
    pathway_name='PEP_E4P to Phe0'
    substrates=['O=C(O)C(OP(=O)(O)O)=C.C(C(C(C=O)O)O)OP(=O)(O)O']
    products=['C1=CC=C(C=C1)CC(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.2,1000,[0,0,0],"FP3"]
    '''

    # 'PEP_E4P to Tyr'
    '''
    rxn_db=True
    pathway_name='PEP_E4P to Tyr0'
    substrates=['O=C(O)C(OP(=O)(O)O)=C.C(C(C(C=O)O)O)OP(=O)(O)O']
    products=['C1=CC(=CC=C1CC(C(=O)O)N)O']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.2,1000,[0,0,0],"FP3"]
    '''

    # 'PEP_E4P to Try0'
    '''
    rxn_db=True
    pathway_name='PEP_E4P to Try0'
    substrates=['O=C(O)C(OP(=O)(O)O)=C.C(C(C(C=O)O)O)OP(=O)(O)O']
    products=['C1=CC=C2C(=C1)C(=CN2)CC(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.2,1000,[0,0,0],"FP3"]
    '''
# ==================================================================================== #
    # cis-3-hexen-1-ol
    '''  
    rxn_db=True
    pathway_name='cis-3-hexen-1-ol'
    substrates=['O=C(C(=O)O)C.CCCCO']
    products=['CC\C=C/CCO']
    pruning_method=None
    max_levels=6
    [XI,T0,P0,fp_type]=[0.2,100,[2,2,2],3]
    '''
    # 1-hexanol
    '''
    main_run("AP",'1-hexanol',['O=C(C(=O)O)C.CCCCO'],['CCCCCCO'],\
        None,6,0.2,10,[2,2,2],\
        "MACCS",[1,1,1,1],[0.5,0.5,2],1)
    '''
    # 2-hexenal
    '''
    rxn_db=True
    pathway_name='2-hexanal'
    substrates=['CC=O.CCCC=O']
    products=['CCCC=CC=O']
    pruning_method=None
    max_levels=5
    [XI,T0,P0,fp_type]=[0.5,0.1,[8,8,8],"FP4"]
    '''
    # ethanolamine
    '''
    rxn_db=True
    pathway_name='ethanolamine'
    substrates=['C(=O)O.CC=O.CCO.C=C.CO.C(=O)C=O.CC(=O)CO.C.CC(=O)C.CC(=O)O.C(O)CO.CCCO']
    products=['C(CO)N']
    pruning_method=None
    max_levels=3
    [XI,T0,P0,fp_type]=[0.5,0.1,[2,2,2],"FP3"]
    '''



    '''
    rxn_db=True
    pathway_name='PYR to LEU'
    substrates=['O=C(C(=O)O)C']
    products=['CC(C)CC(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.8,100,[0,0,0],"ECFP"]
    '''


    '''
    rxn_db=True
    pathway_name='AlphaLinolenicAcid-3-hexanal'
    substrates=['CCC=CCC=CCC=CCCCCCCCC(=O)O']
    products=['CCC=CCC=O']
    pruning_method=None
    max_levels=4
    [XI,T0,P0,fp_type]=[0.5,0.1,[2,2,2],3]
    '''

    '''
    rxn_db=True
    pathway_name='AlphaLinolenicAcid-1-hexanol'
    substrates=['CCC=CCC=CCC=CCCCCCCCC(=O)O']
    products=['CCCCCCO']
    pruning_method=None
    max_levels=4
    [XI,T0,P0,fp_type]=[0.5,0.1,[2,2,2],3]
    '''


    '''
    rxn_db=True
    pathway_name='2-hexanal'
    substrates=['CC=O.CCCC=O']
    products=['CCCC=CC=O']
    pruning_method=None
    max_levels=3
    [XI,T0,P0,fp_type]=[0.5,0.1,[2,2,2],3]
    '''


    # 1-hexanol
    '''
    rxn_db=True
    pathway_name='1-hexanol 6 step'
    substrates=['O=C(C(=O)O)C.CCCCO']
    products=['CCCCCCO']
    pruning_method=None
    max_levels=6
    [XI,T0,P0,fp_type]=[0.8,100,[1,1,1],"ECFP"]
    '''


    # 2-hexenal
    '''
    rxn_db=True
    pathway_name='2-hexanal'
    substrates=['CC=O.CCCC=O']
    products=['CCCC=CC=O']
    pruning_method=None
    max_levels=3
    [XI,T0,P0,fp_type]=[0.5,0.1,[1,1,1],"MACCS"]
    '''
    

    '''
    rxn_db=True
    pathway_name='PYR to LEU'
    substrates=['O=C(C(=O)O)C']
    products=['CC(C)CC(C(=O)O)N']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.8,100,[0,0,0],"MACCS"]
    '''


    '''
    rxn_db=True
    pathway_name='AKT to ASN'
    substrates=['O=C(O)C(=O)CCC(=O)O']
    products=['O=C(N)C[CH](N)C(=O)O']
    pruning_method=None
    max_levels=8
    [XI,T0,P0,fp_type]=[0.2,1000,[2,2,2],3]
    '''


    # '2-hexanal' 2-step transformation
    '''
    main_run("AP",'2-hexanal',['CC=O.CCCC=O'],['CCCC=CC=O'],\
        None,6,0.8,100,[-1,-1,-1],\
        "MACCS",[1,1,1,1],[0.5,0.5,2],1)
        '''